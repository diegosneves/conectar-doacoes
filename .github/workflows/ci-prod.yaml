
name: CI Prod

on:
  pull_request:
    branches:
      - main
jobs:
  check-application:
    strategy:
      matrix:
        ubuntu: ['ubuntu-latest']
        java: ['17']
    runs-on: ${{ matrix.ubuntu }}

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_HOST: 127.0.0.1
      DB_PORT: 3306

    steps:
      - name: Checkout codigo
        uses: actions/checkout@v3

      - name: check PR head branch
        run: |
          if [[ "${{ github.head_ref }}" != release/* ]]; then
            echo "PRs to main must come from a release/* branch. PR is from '${{ github.head_ref }}'"
            exit 1
          fi

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java }}

      - name: Setup Maven
        run: |
            sudo apt-get install -y maven

      - name: Install Dependencies
        run: mvn clean install -DskipTests

      - name: Run Tests
        run: mvn test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: diegoneves/conectar-doacoes:latest
          build-args: |
            DB_NAME=${{ env.DB_NAME }}
            DB_PASSWORD=${{ env.DB_PASSWORD }}
            DB_USERNAME=${{ env.DB_USERNAME }}
